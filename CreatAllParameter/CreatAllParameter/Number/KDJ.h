#pragma once
#include "NumberBase.h"

////////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
struct KDJ/*:public IndexBaseType*/
{
public:
	KDJ() :K_OF_KDJ(0), D_OF_KDJ(0), J_OF_KDJ(0){}
	tyStockData K_OF_KDJ;
	tyStockData D_OF_KDJ;
	tyStockData J_OF_KDJ;
// 	KDJ operator = (const KDJ& rhs){
// 		_Index1 = rhs._Index1;
// 		_Index2 = rhs._Index2;
// 		_Index3 = rhs._Index3;
// 		_Index4 = rhs._Index4;
// 		_Index5 = rhs._Index5;
// 		return *this;
// 	}
};
///////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
class CKDJ 
	//public CNumberManager
{
public:
	CKDJ(tyStockData day1, tyStockData day2, tyStockData day3);
	~CKDJ(void);
// 	//////////////////////////////////////////////////////////////////////////
// 	//更新目录下所有CSV文件里的KDJ值(数据按列排)
// 	//strPath:目录路径
// 	//////////////////////////////////////////////////////////////////////////
// 	virtual void UpdateFileColumn(string strFolderPath);
// 	//////////////////////////////////////////////////////////////////////////
// 	//更新目录下所有CSV文件里的KDJ值(数据按行排)
// 	//strPath:目录路径
// 	//////////////////////////////////////////////////////////////////////////
// 	virtual void UpdatePathFilesRanks(string strPath);
// 	//////////////////////////////////////////////////////////////////////////
// 	//更新CSV文件文件里的KDJ值(数据按行排)
// 	//strPath:文件路径
// 	//////////////////////////////////////////////////////////////////////////
// 	virtual void UpdateFileRanks(string strfilename);
	//////////////////////////////////////////////////////////////////////////
	//
	//
	//////////////////////////////////////////////////////////////////////////
	bool GetNextKDJ(const DatePriceData& OneDayData, KDJ& mFrontKDJ);
	void Inition();
private:
	CKDJ();
	void StaticSizePush(tyStockData mdata, float msize, list<tyStockData>& mList);
	list<tyStockData> _lHigh;
	list<tyStockData> _lLow;
	list<tyStockData> _lClose;
	//KDJ指标的参数
	const float _Nday, _M1, _M2;
};
