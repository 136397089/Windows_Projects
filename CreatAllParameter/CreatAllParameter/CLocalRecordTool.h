#pragma once
#ifndef LOCALRECORD_H
#define LOCALRECORD_H

#include "StateB.h"
#include <list>
#define  LOCALSTARTINDEX 60

class CLocalRecordTool
{
public:
	CLocalRecordTool();
	~CLocalRecordTool();
	//////////////////////////////////////////////////////////////////////////
	//初始化，清除所有内部趋势结果
	//////////////////////////////////////////////////////////////////////////
	void Inition(unsigned int range = 3);
	///////////////////////////////////////////////////////////////////////////
	//输入所有数据，并进行分析
	//////////////////////////////////////////////////////////////////////////
	void LocalStateAnalysis(const vector<string>& _day, const VStockData& _inputdata);
	///////////////////////////////////////////////////////////////////////////
	//输入单个数据，进行迭代局部分析
	//////////////////////////////////////////////////////////////////////////
	void LocalStateRecordSigPoint(const string& strday, const StockDataType& OneDayData);
	///////////////////////////////////////////////////////////////////////////
	//获取结果，返回局部结果
	//////////////////////////////////////////////////////////////////////////
	const StatePointsList& GetAllLocalResult();
	///////////////////////////////////////////////////////////////////////////
	//获取结果，返回局部低点结果
	//////////////////////////////////////////////////////////////////////////
	const StatePointsList& GetLowLocalResult();
	///////////////////////////////////////////////////////////////////////////
	//获取结果，返回局部高点结果
	//////////////////////////////////////////////////////////////////////////
	const StatePointsList& GetHighLocalResult();
private:
	//////////////////////////////////////////////////////////////////////////
	//单日单指标局部分析中的局部最低点分析
	//////////////////////////////////////////////////////////////////////////
	bool LocalStateRecordSinglePoint_Low(const string& day,const StockDataType& dayValue);
	//////////////////////////////////////////////////////////////////////////
	//单日单指标局部分析中的局部最高点分析
	//////////////////////////////////////////////////////////////////////////
	bool LocalStateRecordSinglePoint_High(const string& day,const StockDataType& dayValue);
	/*
	局部分析中，局部特征点的历史记录
	*/
 	//局部分析判断高低点时的范围参数
	unsigned int _Parameter_Local;
	//用于保存局部特征点
	StatePointsList _vIndexRecord_Local;
	StatePointsList _vLowIndexRecord_Local;
	StatePointsList _vHighIndexRecord_Local;
	//用于保存最近几天的数据
	list<StatePoint> _lTempValue;
	//用于记录临时的最高点和最低点
	//只有当后面一定数量的数据点被判断为高于或者低于临时点时才可以确定为局部最高或者最低
	unsigned int HighIndex;
	unsigned int LowIndex;
	StatePoint temporaryHighPoint;
	StatePoint temporaryLowPoint;
	bool temporaryHighPointIsPush;
	bool temporaryLowPointIsPush;
	//记录当前的Index
	unsigned int _CurrentInedxMark;
};

#endif
